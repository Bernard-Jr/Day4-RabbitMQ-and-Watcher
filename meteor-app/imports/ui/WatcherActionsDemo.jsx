import React, { useState } from 'react';
import { useTracker } from 'meteor/react-meteor-data';
import { Meteor } from 'meteor/meteor';
import { Mongo } from 'meteor/mongo';

// Define a collection for logs (for demo purposes)
const ActionLogs = new Mongo.Collection('action_logs');

export default function WatcherActionsDemo() {
  const [input, setInput] = useState('');
  // Subscribe to logs and show all logs generated by watchers and actions
  const logs = useTracker(() => {
    Meteor.subscribe('action_logs');
    return ActionLogs.find({}, { sort: { createdAt: -1 } }).fetch();
  }, []);

  // Simulate an event that triggers a Meteor method
  const triggerAction = e => {
    e.preventDefault();
    if (input.trim()) {
      Meteor.call('log.action', { text: input.trim() });
      setInput('');
    }
  };

  // Clear all logs in the action_logs collection
  const clearLogs = () => {
    Meteor.call('actionLogs.clear');
  };

  return (
    <div style={{ maxWidth: 600, margin: '0 auto', padding: 40 }}>
      <h1>Watcher Actions Demo</h1>
      <div style={{ background: '#f8f8f8', borderRadius: 8, padding: 16, marginBottom: 24 }}>
        <div style={{ marginBottom: 12 }}>
          <strong>How does this tab work?</strong><br />
          <span style={{ fontSize: '1rem' }}>
            When you type an action and click <b>Trigger Action</b>, it gets saved to the <code>action_logs</code> collection using a Meteor method.<br />
            The log feed below shows all actions you log, plus any logs automatically created by watchers when events are added in the Watcher Demo tab.
          </span>
        </div>
        <div>
          <strong>How is this different from the Watcher Demo?</strong><br />
          <span style={{ fontSize: '1rem' }}>
            <b>Watcher Demo</b> shows live updates for events only.<br />
            <b>Watcher Actions Demo</b> shows a feed of all logged actions, including those triggered by watchers and by you directly.
          </span>
        </div>
      </div>
      <form onSubmit={triggerAction} style={{ display: 'flex', gap: 8, alignItems: 'center', marginBottom: 20 }}>
        <input
          type="text"
          value={input}
          onChange={e => setInput(e.target.value)}
          placeholder="Type an action to log..."
          style={{ flex: 1, minWidth: 0, padding: '6px 8px', fontSize: '1rem' }}
        />
        <button type="submit" style={{ padding: '6px 12px' }}>Trigger Action</button>
        <button type="button" onClick={clearLogs} style={{ padding: '6px 12px' }}>Clear All Logs</button>
      </form>
      <h3>Action Log Feed</h3>
      <ul>
        {logs.map(log => (
          <li key={log._id}>{log.text} <small>{log.createdAt && new Date(log.createdAt).toLocaleTimeString()}</small></li>
        ))}
      </ul>
    </div>
  );
}
